<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Run PgBouncer using Private Registry on Run production-grade databases easily on Kubernetes</title><link>https://kubedb.com/docs/v2020.07.10-beta.0/guides/pgbouncer/private-registry/</link><description>Recent content in Run PgBouncer using Private Registry on Run production-grade databases easily on Kubernetes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://kubedb.com/docs/v2020.07.10-beta.0/guides/pgbouncer/private-registry/index.xml" rel="self" type="application/rss+xml"/><item><title>Run PgBouncer using Private Registry</title><link>https://kubedb.com/docs/v2020.07.10-beta.0/guides/pgbouncer/private-registry/using-private-registry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubedb.com/docs/v2020.07.10-beta.0/guides/pgbouncer/private-registry/using-private-registry/</guid><description>New to KubeDB? Please start here.
Using private Docker registry KubeDB supports using private Docker registry. This tutorial will show you how to run KubeDB managed PgBouncer using private Docker images.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind.</description></item></channel></rss>