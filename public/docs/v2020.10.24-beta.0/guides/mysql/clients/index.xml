<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MySQL Clients on Run production-grade databases easily on Kubernetes</title><link>https://kubedb.com/docs/v2020.10.24-beta.0/guides/mysql/clients/</link><description>Recent content in MySQL Clients on Run production-grade databases easily on Kubernetes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://kubedb.com/docs/v2020.10.24-beta.0/guides/mysql/clients/index.xml" rel="self" type="application/rss+xml"/><item><title>Connecting to a MySQL Cluster</title><link>https://kubedb.com/docs/v2020.10.24-beta.0/guides/mysql/clients/mysql-cluster/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubedb.com/docs/v2020.10.24-beta.0/guides/mysql/clients/mysql-cluster/</guid><description>New to KubeDB? Please start here.
Connecting to a MySQL Cluster KubeDB creates separate services for primary and secondary replicas. In this tutorial, we are going to show you how to connect your application with primary or secondary replicas using those services.
Before You Begin Read mysql group replication concept to learn about MySQL Group Replication.
You need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster.</description></item></channel></rss>