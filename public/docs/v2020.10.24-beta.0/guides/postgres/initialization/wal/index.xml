<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PostgreSQL Initialization from WAL on Run production-grade databases easily on Kubernetes</title><link>https://kubedb.com/docs/v2020.10.24-beta.0/guides/postgres/initialization/wal/</link><description>Recent content in PostgreSQL Initialization from WAL on Run production-grade databases easily on Kubernetes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://kubedb.com/docs/v2020.10.24-beta.0/guides/postgres/initialization/wal/index.xml" rel="self" type="application/rss+xml"/><item><title>Initialize Postgres from WAL in Azure</title><link>https://kubedb.com/docs/v2020.10.24-beta.0/guides/postgres/initialization/wal/replay_from_azure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubedb.com/docs/v2020.10.24-beta.0/guides/postgres/initialization/wal/replay_from_azure/</guid><description>New to KubeDB? Please start here.
Don&amp;rsquo;t know how to take continuous backup? Check this tutorial on Continuous Archiving.
PostgreSQL Initialization from Azure WAL-G is used to handle replay, and restoration mechanism. Please refer to Initialization from WAL files in KubeDB to know more about it.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster.</description></item><item><title>Initialize Postgres from WAL in GCS</title><link>https://kubedb.com/docs/v2020.10.24-beta.0/guides/postgres/initialization/wal/replay_from_gcs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubedb.com/docs/v2020.10.24-beta.0/guides/postgres/initialization/wal/replay_from_gcs/</guid><description>New to KubeDB? Please start here.
Don&amp;rsquo;t know how to take continuous backup? Check this tutorial on Continuous Archiving.
PostgreSQL Initialization from GCS WAL-G is used to handle replay, and restoration mechanism. Please refer to Initialization from WAL files in KubeDB to know more about it.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster.</description></item><item><title>Initialize Postgres from WAL in Local Storage</title><link>https://kubedb.com/docs/v2020.10.24-beta.0/guides/postgres/initialization/wal/replay_from_local/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubedb.com/docs/v2020.10.24-beta.0/guides/postgres/initialization/wal/replay_from_local/</guid><description>New to KubeDB? Please start here.
Don&amp;rsquo;t know how to take continuous backup? Check this tutorial on Continuous Archiving.
PostgreSQL Initialization from Local Storage WAL-G is used to handle replay, and restoration mechanism. Please refer to Initialization from WAL files in KubeDB to know more about it.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster.</description></item><item><title>Initialize Postgres from WAL in MinIO</title><link>https://kubedb.com/docs/v2020.10.24-beta.0/guides/postgres/initialization/wal/replay_from_minio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubedb.com/docs/v2020.10.24-beta.0/guides/postgres/initialization/wal/replay_from_minio/</guid><description>New to KubeDB? Please start here.
Don&amp;rsquo;t know how to take continuous backup? Check this tutorial on Continuous Archiving.
PostgreSQL Initialization from MinIO WAL-G is used to handle replay, and restoration mechanism. Please refer to Initialization from WAL files in KubeDB to know more.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster.</description></item><item><title>Initialize Postgres from WAL in S3</title><link>https://kubedb.com/docs/v2020.10.24-beta.0/guides/postgres/initialization/wal/replay_from_s3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubedb.com/docs/v2020.10.24-beta.0/guides/postgres/initialization/wal/replay_from_s3/</guid><description>New to KubeDB? Please start here.
Don&amp;rsquo;t know how to take continuous backup? Check this tutorial on Continuous Archiving.
PostgreSQL Initialization from S3 WAL-G is used to handle replay, and restoration mechanism. Please refer to Initialization from WAL files in KubeDB to know more about it.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster.</description></item><item><title>Initialize Postgres from WAL in Swift</title><link>https://kubedb.com/docs/v2020.10.24-beta.0/guides/postgres/initialization/wal/replay_from_swift/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubedb.com/docs/v2020.10.24-beta.0/guides/postgres/initialization/wal/replay_from_swift/</guid><description>New to KubeDB? Please start here.
Don&amp;rsquo;t know how to take continuous backup? Check this tutorial on Continuous Archiving.
PostgreSQL Initialization from Swift WAL-G is used to handle replay, and restoration mechanism. Please refer to Initialization from WAL files in KubeDB to know more about it.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster.</description></item><item><title>Point-in-Time Recovery (PITR) | Postgres</title><link>https://kubedb.com/docs/v2020.10.24-beta.0/guides/postgres/initialization/wal/point-in-time-recovery/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubedb.com/docs/v2020.10.24-beta.0/guides/postgres/initialization/wal/point-in-time-recovery/</guid><description>New to KubeDB? Please start here.
Point-in-Time Recovery (PITR) from WAL Source KubeDB supports Point-in-Time Recovery (PITR) from WAL archive. You can recover your PostgreSQL database to an identical state of a particular time point. This tutorial will show you how to perform Point-in-Time Recovery of a PostgreSQL database with KubeDB.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster.</description></item><item><title>Postgres Initialization from WAL</title><link>https://kubedb.com/docs/v2020.10.24-beta.0/guides/postgres/initialization/wal/wal_source/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubedb.com/docs/v2020.10.24-beta.0/guides/postgres/initialization/wal/wal_source/</guid><description>New to KubeDB? Please start here.
Don&amp;rsquo;t know how to take continuous backup? Check this tutorial on Continuous Archiving.
PostgreSQL Initialization from WAL files KubeDB supports PostgreSQL database initialization. When you create a new Postgres object, you can provide existing WAL files to restore from by &amp;ldquo;replaying&amp;rdquo; the log entries. Users can now restore from any one of s3, gcs, azure, or swift as cloud backup provider.</description></item></channel></rss>