<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MySQL Snapshotting on Run production-grade databases easily on Kubernetes</title>
    <link>https://kubedb-v2-hugo.firebaseapp.com/docs/0.9.0-rc.2/guides/mysql/snapshot/</link>
    <description>Recent content in MySQL Snapshotting on Run production-grade databases easily on Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://kubedb-v2-hugo.firebaseapp.com/docs/0.9.0-rc.2/guides/mysql/snapshot/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Instant Backup of MySQL</title>
      <link>https://kubedb-v2-hugo.firebaseapp.com/docs/0.9.0-rc.2/guides/mysql/snapshot/backup-and-restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kubedb-v2-hugo.firebaseapp.com/docs/0.9.0-rc.2/guides/mysql/snapshot/backup-and-restore/</guid>
      <description>New to KubeDB? Please start here.
 Database Snapshots This tutorial will show you how to take snapshots of a KubeDB managed MySQL database.
 Note: The yaml files used in this tutorial are stored in docs/examples/mysql folder in GitHub repository kubedb/cli.
 Before You Begin  At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster.</description>
    </item>
    
    <item>
      <title>Scheduled Backup of MySQL</title>
      <link>https://kubedb-v2-hugo.firebaseapp.com/docs/0.9.0-rc.2/guides/mysql/snapshot/scheduled-backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kubedb-v2-hugo.firebaseapp.com/docs/0.9.0-rc.2/guides/mysql/snapshot/scheduled-backup/</guid>
      <description>New to KubeDB? Please start here.
 Database Scheduled Snapshots This tutorial will show you how to use KubeDB to take scheduled snapshot of a MySQL database.
Before You Begin  At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using Minikube.</description>
    </item>
    
  </channel>
</rss>