<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PostgreSQL Clustering on Run production-grade databases easily on Kubernetes</title>
    <link>https://kubedb-v2-hugo.firebaseapp.com/docs/0.8.0-beta.2/guides/postgres/clustering/</link>
    <description>Recent content in PostgreSQL Clustering on Run production-grade databases easily on Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://kubedb-v2-hugo.firebaseapp.com/docs/0.8.0-beta.2/guides/postgres/clustering/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Setup HA Postgres Cluster</title>
      <link>https://kubedb-v2-hugo.firebaseapp.com/docs/0.8.0-beta.2/guides/postgres/clustering/ha_cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kubedb-v2-hugo.firebaseapp.com/docs/0.8.0-beta.2/guides/postgres/clustering/ha_cluster/</guid>
      <description>New to KubeDB? Please start here.
 Configuring Highly Available PostgreSQL Cluster In PostgreSQL, multiple servers can work together to serve high availability and load balancing. These servers will be either in Master or Standby mode. `` In master mode, server that can modify data. In standby mode, the server continuously applies WAL received from the master server. The standby server can read WAL from a WAL archive (see restore_command) or directly from the master over a TCP connection (streaming replication).</description>
    </item>
    
    <item>
      <title>Using Postgres Streaming Replication</title>
      <link>https://kubedb-v2-hugo.firebaseapp.com/docs/0.8.0-beta.2/guides/postgres/clustering/streaming_replication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kubedb-v2-hugo.firebaseapp.com/docs/0.8.0-beta.2/guides/postgres/clustering/streaming_replication/</guid>
      <description>New to KubeDB? Please start here.
 Streaming Replication Streaming Replication provides asynchronous replication to one or more standby servers.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using minikube.
Now, install KubeDB cli on your workstation and KubeDB operator in your cluster following the steps here.</description>
    </item>
    
  </channel>
</rss>