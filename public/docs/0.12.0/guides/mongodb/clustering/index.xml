<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MongoDB Clustering on Run production-grade databases easily on Kubernetes</title><link>https://kubedb.com/docs/0.12.0/guides/mongodb/clustering/</link><description>Recent content in MongoDB Clustering on Run production-grade databases easily on Kubernetes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://kubedb.com/docs/0.12.0/guides/mongodb/clustering/index.xml" rel="self" type="application/rss+xml"/><item><title>MongoDB ReplicaSet Concept</title><link>https://kubedb.com/docs/0.12.0/guides/mongodb/clustering/replication_concept/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubedb.com/docs/0.12.0/guides/mongodb/clustering/replication_concept/</guid><description>New to KubeDB? Please start here.
MongoDB Replication A replica set in MongoDB is a group of mongod processes that maintain the same data set. Replica sets provide redundancy and high availability, and are the basis for all production deployments. This section introduces replication in MongoDB as well as the components and architecture of replica sets.
Redundancy and Data Availability Replication provides redundancy and increases data availability. With multiple copies of data on different database servers, replication provides a level of fault tolerance against the loss of a single database server.</description></item><item><title>MongoDB ReplicaSet Guide</title><link>https://kubedb.com/docs/0.12.0/guides/mongodb/clustering/replicaset/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubedb.com/docs/0.12.0/guides/mongodb/clustering/replicaset/</guid><description>New to KubeDB? Please start here.
KubeDB - MongoDB ReplicaSet This tutorial will show you how to use KubeDB to run a MongoDB ReplicaSet.
Before You Begin Before proceeding:
Read mongodb replication concept to learn about MongoDB Replica Set clustering.
You need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using Minikube.</description></item><item><title>MongoDB Sharding Concept</title><link>https://kubedb.com/docs/0.12.0/guides/mongodb/clustering/sharding_concept/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubedb.com/docs/0.12.0/guides/mongodb/clustering/sharding_concept/</guid><description>New to KubeDB? Please start here.
MongoDB Sharding Sharding is a method for distributing data across multiple machines. MongoDB uses sharding to support deployments with very large data sets and high throughput operations. This section introduces sharding in MongoDB as well as the components and architecture of sharding.
Sharded Cluster A MongoDB sharded cluster consists of the following components:
shard: Each shard contains a subset of the sharded data.</description></item><item><title>MongoDB Sharding Guide</title><link>https://kubedb.com/docs/0.12.0/guides/mongodb/clustering/sharding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubedb.com/docs/0.12.0/guides/mongodb/clustering/sharding/</guid><description>New to KubeDB? Please start here.
MongoDB Sharding This tutorial will show you how to use KubeDB to run a sharded MongoDB cluster.
Before You Begin Before proceeding:
Read mongodb sharding concept to learn about MongoDB Sharding clustering.
You need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using Minikube.</description></item></channel></rss>