<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redis Clustering on Run production-grade databases easily on Kubernetes</title>
    <link>https://kubedb-v2-hugo.firebaseapp.com/docs/0.11.0/guides/redis/clustering/</link>
    <description>Recent content in Redis Clustering on Run production-grade databases easily on Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://kubedb-v2-hugo.firebaseapp.com/docs/0.11.0/guides/redis/clustering/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Redis Cluster Guide</title>
      <link>https://kubedb-v2-hugo.firebaseapp.com/docs/0.11.0/guides/redis/clustering/redis-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kubedb-v2-hugo.firebaseapp.com/docs/0.11.0/guides/redis/clustering/redis-cluster/</guid>
      <description>New to KubeDB? Please start here.
 KubeDB - Redis Cluster This tutorial will show you how to use KubeDB to provision a Redis cluster.
Before You Begin Before proceeding:
 Read redis clustering concept to learn about Redis clustering.
 You need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using Minikube.</description>
    </item>
    
    <item>
      <title>Redis Cluster Overview</title>
      <link>https://kubedb-v2-hugo.firebaseapp.com/docs/0.11.0/guides/redis/clustering/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kubedb-v2-hugo.firebaseapp.com/docs/0.11.0/guides/redis/clustering/overview/</guid>
      <description>New to KubeDB? Please start here.
 Redis Cluster Redis Cluster provides a way to partition data among multiple master nodes (data sharding) and ensures data availability. Each of the master nodes may have its own replicas. The cluster member nodes (both masters and replicas) detect failures via internal interconnection among themselves. When a majority of nodes agree with the failure of a master node, one of the replicas of the failed master node is promoted to the new master.</description>
    </item>
    
  </channel>
</rss>