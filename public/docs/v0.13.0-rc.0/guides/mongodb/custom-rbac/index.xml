<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Run MongoDB with Custom RBAC resources on Run production-grade databases easily on Kubernetes</title><link>https://kubedb.com/docs/v0.13.0-rc.0/guides/mongodb/custom-rbac/</link><description>Recent content in Run MongoDB with Custom RBAC resources on Run production-grade databases easily on Kubernetes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://kubedb.com/docs/v0.13.0-rc.0/guides/mongodb/custom-rbac/index.xml" rel="self" type="application/rss+xml"/><item><title>Run MongoDB with Custom RBAC resources</title><link>https://kubedb.com/docs/v0.13.0-rc.0/guides/mongodb/custom-rbac/using-custom-rbac/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubedb.com/docs/v0.13.0-rc.0/guides/mongodb/custom-rbac/using-custom-rbac/</guid><description>New to KubeDB? Please start here.
Using Custom RBAC resources KubeDB (version 0.13.0 and higher) supports finer user control over role based access permissions provided to a MongoDB instance. This tutorial will show you how to use KubeDB to run MongoDB instance with custom RBAC resources.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster.</description></item></channel></rss>