{
  "features": {
    "availabilityAndDurability": {
      "id": "availability_and_durability",
      "title": "Backup & Restore Databases in Kubernetes",
      "meta": "Backup, Restore and Data Protection for Various Databases in Kubernetes on any Public and Private Cloud",
      "innerContent": [
        {
          "id": 1,
          "title": "Automated backups",
          "description": "KubeDB will backup your database and transaction logs at a user-defined frequency and store both for a user-specified retention period in a cloud object store (S3, GCS, etc.) or local filesystem (like NFS, etc.). You can also initiate one-off backups. KubeDB uses Stash by AppsCode to take deduplicated and encrypted backups so that you only incur the cost of incremental storage use. You can create a new instance from database snapshots whenever you desire.",
          "img": "https://via.placeholder.com/600/dddddd/808080"
        },
        {
          "id": 2,
          "title": "Automated Failover and self-healing",
          "description": "KubeDB will automatically replace the pods powering your database instances in the event of an involuntary disruption eg, hardware failure). In case of a voluntary disruption (eg. draining a node for repair or upgrade, draining a node from a cluster to scale the cluster down, etc.), PodDisruptionBudget for clustered database instances is used to make maintenance of underlying infrastructure transparent. KubeDB configures liveness and readiness probes for database instances for continuous health-checking and automatically fails over if an instance is not healthy.",
          "img": "https://via.placeholder.com/600/dddddd/808080"
        },
        {
          "id": 3,
          "title": "Multi-AZ deployments",
          "description": "KubeDB Multi-AZ deployments provide enhanced availability and durability for database instances, making them a natural fit for production database workloads. When you provision a Multi-AZ database instance, KubeDB replicates your data to standby instances across multiple Kubernetes failure-domains. KubeDB enables enterprises to target database instances into a placement zone to meet particular data affinity, governance and performance requirements.",
          "img": "https://via.placeholder.com/600/dddddd/808080"
        }
      ]
    },
    "costEffectiveness": {
      "id": "cost_effectiveness",
      "title": "Deploy & Manage Databases in Kubernetes FREE",
      "meta": "KubeDB community edition is FREE to use on any supported Kubernetes enginesYou can deploy and manage your database in Kubernetes FREE",
      "innerContent": [
        {
          "id": 1,
          "title": "Cost-effectiveness",
          "description": "KubeDB community edition is FREE to use on any supported Kubernetes engines. You can deploy and manage your MySQL database in Kubernetes using KubeDB. There is no up-front investment required, and you need to pay only for the resources you use to your infrastructure provider. We offer a 30 days license FREE of cost to try KubeDB Enterprise edition.",
          "img": "https://via.placeholder.com/600/dddddd/808080"
        },
        {
          "id": 2,
          "title": "Reserved instances",
          "description": "Cloud providers like AWS and Azure have the option to reserve virtual machines in advance for 1-3 year terms and provide a significant discount (up to 75% - 80%) compared to on-demand VM pricing. KubeDB operators can provision database instances on reserved instances and significantly reduce your TOC for the DB instances.",
          "img": "https://via.placeholder.com/600/dddddd/808080"
        },
        {
          "id": 3,
          "title": "Halt and Resume",
          "description": "KubeDB allows you to easily halt and resume your database instances. This makes it easy and affordable to use databases for development and test purposes, where the database is not required to be running all of the time.",
          "img": "https://via.placeholder.com/600/dddddd/808080"
        },
        {
          "id": 4,
          "title": "Open Source",
          "description": "KubeDB is an open core project. KubeDB Community edition is open source and free to use for both commercial and non-commercial purposes. It comes with the cluster provisioning functionalities. KubeDB Enterprise edition includes the features of the Community Edition and extends it by automating Day 2 operations like database backup/recovery, upgrading version, horizontal and vertical scaling, TLS/SSL support via cert-manager, updating configuration post provisioning, connection pooling, etc.",
          "img": "https://via.placeholder.com/600/dddddd/808080"
        }
      ]
    },
    "security": {
      "id": "security",
      "title": "Secure Databases in Kubernetes",
      "meta": "Secure your Databases in Kubernetes via TLS/SSL encryption. KubeDB offers a bunch of steps to provide security for your Database in Kubernetes.",
      "innerContent": [
        {
          "id": 1,
          "title": "Encryption at rest and in transit",
          "description": "KubeDB allows you to use encrypted storage for your databases using keys you manage through your cloud provider’s key management service. A database instance running on AWS can keep its data stored at rest in the underlying storage encrypted, as are its automated backups, read replicas, and snapshots.",
          "img": "https://via.placeholder.com/600/dddddd/808080"
        },
        {
          "id": 2,
          "title": "Network isolation",
          "description": "KubeDB provisioned database instances by default runs inside the private Kubernetes pod network. To further secure your database instances, you can configure network policies so that only the necessary pods can communicate with database pods. It creates firewalls between pods running on a Kubernetes cluster.",
          "img": "https://via.placeholder.com/600/dddddd/808080"
        },
        {
          "id": 3,
          "title": "Resource-level permissions",
          "description": "KubeDB is integrated with Kubernetes Role Based Access Control (RBAC) and provides you the ability to control the actions that your Kubernetes users and groups can take on specific KubeDB database instances. For example, you can configure your RBAC roles to ensure developers are able to modify **Development** database instances, but only Database Administrators can make changes to **Production** database instances.",
          "img": "https://via.placeholder.com/600/dddddd/808080"
        },
        {
          "id": 4,
          "title": "Private registry & air-gapped cluster",
          "description": "KubeDB operator can be configured to work with an in-cluster private registry. This makes KubeDB viable to run an air-gapped Kubernetes cluster. Cluster administrators can use private registries to ensure that only pre-approved docker images are able to run inside a cluster.",
          "img": "https://via.placeholder.com/600/dddddd/808080"
        },
        {
          "id": 5,
          "title": "Database User management",
          "description": "KubeDB by default creates the root user account for every database that it supports. And also you can provision additional database users with custom permissions and rotate their credentials using KubeVault. Database secret engines in Vault generate database credentials dynamically based on configured roles. Using KubeVault, you can configure a secret engine, create roles and issue credentials from Vault. You can request credentials and after it's been approved by the database administrator, the Vault operator will create a Kubernetes Secret containing the credential and also creates RBAC Role and RoleBinding so that the user can access the Secret.",
          "img": "https://via.placeholder.com/600/dddddd/808080"
        }
      ]
    },
    "lowerAdministrativeBurden": {
      "id": "lower_administrative_burden",
      "title": "Provision your Database in Kubernetes",
      "meta": "You can simply provision your databases in Kubernetes using KubeDB. Don’t need to worry about all of the knowledge of Kubernetes Concept & setups.",
      "innerContent": [
        {
          "id": 1,
          "title": "Unleash Developer Velocity",
          "description": "With KubeDB, you can launch a database instance via a simple CLI, management console or API and start developing in minutes. KubeDB eliminates lengthy deployment and management processes with on-demand provisioning, scaling, patching and updating database instances and shortens time-to-value. KubeDB gives each developer on your team their own development instance, so your team can focus on what matters most — velocity and not have to worry about stepping on each other’s toes.",
          "img": "https://via.placeholder.com/600/dddddd/808080"
        },
        {
          "id": 2,
          "title": "Options of Choosing Various Database Engines",
          "description": "Build and deploy on the cloud or on-premises faster because KubeDB offers most familiar database engines to choose from, including PostgreSQL, MySQL, MongoDB, MariaDB, Elasticsearch, Redis, Percona XtraDB, ProxySQL, PgBouncer and Memcached. This means that the code, applications, and tools you already use today with your existing databases can be used with KubeDB. KubeDB provides users the option to build their custom database Docker images from official KubeDB images and bundle any plugin they prefer.",
          "img": "https://via.placeholder.com/600/dddddd/808080"
        }
      ]
    },
    "performance": {
      "id": "performance",
      "title": "Ensuring Database Performance in Kubernetes",
      "meta": "Ensure your Database Performance in Kubernetes using KubeDB. KubeDB provides a bunch of features that increase your database performance in Kubernetes.",
      "innerContent": [
        {
          "id": 1,
          "title": "Cloud agnostic Storage",
          "description": "Kubernetes provides a powerful cloud agnostic storage abstraction that enables Kubernetes workloads to use a wide variety of block and file storage to persist data. KubeDB uses Persistent Volume Claims (PVC) to dynamically provision disks for database instances. Using appropriately defined StorageClasses, KubeDB provisioned database instances are designed to scale from small development workloads up to performance-intensive workloads on private and public cloud environments.",
          "img": "https://via.placeholder.com/600/dddddd/808080"
        },
        {
          "id": 2,
          "title": "Provisioned IOPS (SSD) Storage",
          "description": "Cloud providers like AWS provide provisioned IOPS Storage which is an SSD-backed storage option designed to deliver fast, predictable, and consistent I/O performance. You specify an IOPS rate when creating a StorageClass, and KubeDB provisions disks at that IOPS rate for the lifetime of the database instance. This storage type is optimized for I/O-intensive transactional (OLTP) database workloads.",
          "img": "https://via.placeholder.com/600/dddddd/808080"
        },
        {
          "id": 3,
          "title": "Cloud-Native Storage",
          "description": "There is a growing ecosystem of cloud-native storage solutions like Rook (Ceph), OpenEBS, Portworx that provide network attached storage for containerized workloads. These systems can provide block storage via CSI drivers in cloud or bare metal clusters. KubeDB can provision database instances that utilize these storage systems using standard Kubernetes abstractions.",
          "img": "https://via.placeholder.com/600/dddddd/808080"
        },
        {
          "id": 4,
          "title": "Local Persistent Volume",
          "description": "Most Kubernetes Storage systems enable remote storage which persists data independent of the Kubernetes node where the data originated. Remote storage usually can not offer the consistent high performance guarantees of local directly-attached storage. Using the Local Persistent Volume plugin, KubeDB can consume high performance local storage seamlessly. However, local volumes are still subject to the availability of the underlying node. HA database instances using local volumes are able to tolerate this reduced availability, as well as automatically recover from potential data loss, depending on the durability characteristics of the underlying disk.",
          "img": "https://via.placeholder.com/600/dddddd/808080"
        },
        {
          "id": 5,
          "title": "Low Latency",
          "description": "KubeDB runs your database instances inside the same pod network as the workloads that use these database instances. Unlike database instances managed by DBaaS vendors, there is no cross VPC latency between your database instances and your applications.",
          "img": "https://via.placeholder.com/600/dddddd/808080"
        }
      ]
    },
    "nativeKubernetesSupport": {
      "id": "native_kubernetes_support",
      "title": "Run & Manage Databases in Kubernetes Native Way",
      "meta": "Run & Manage Databases in Kubernetes Native Way. KubeDB offers Native Kubernetes Support for managing databases on Hybrid and Multi-Cloud Environments.",
      "innerContent": [
        {
          "id": 1,
          "title": "Infrastructure as code",
          "description": "KubeDB defines each supported database engine as a custom resource (CRD) for Kubernetes. You can use Kubernetes CLI or API to provision, manage, and interact with KubeDB database instances. This native integration with Kubernetes means your database instances are ready for any higher level deployment tooling like GitOps, Open Policy Agent (OPA), etc.",
          "img": "https://via.placeholder.com/600/dddddd/808080"
        },
        {
          "id": 2,
          "title": "Hybrid and Multi-cloud",
          "description": "To run KubeDB, all you need is a Kubernetes cluster. So, you can run a production-grade database deployment in your desktop via minikube to hybrid and multi-cloud environments against a single consistent interface. KubeDB follows the official deprecation policy for Kubernetes so that your database instances always keep pace with the latest security and maintenance updates.",
          "img": "https://via.placeholder.com/600/dddddd/808080"
        },
        {
          "id": 3,
          "title": "Single Stack for Stateless and Stateful Workloads",
          "description": "KubeDB enables enterprises to maintain one stack for their stateless and stateful workloads. This means your developer and operations team don’t have to learn, maintain and manage separate stack for deployments, monitoring, logging and alert management. KubeDB allows you to use the same workflow across public and private clouds and avoid vendor lock-in. KubeDB makes your engineering teams agile so that they can focus on delivering the best value for your customers and users.",
          "img": "https://via.placeholder.com/600/dddddd/808080"
        }
      ]
    }
  }
}
